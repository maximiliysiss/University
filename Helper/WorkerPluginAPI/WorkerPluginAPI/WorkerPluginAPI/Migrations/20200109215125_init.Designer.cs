// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkerPluginAPI.Services;

namespace WorkerPluginAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200109215125_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkerPluginAPI.Models.Worker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Token");

                    b.HasKey("ID");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Login = "Worker",
                            PasswordHash = ""
                        });
                });

            modelBuilder.Entity("WorkerPluginAPI.Models.WorkerCheck", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("WorkerId");

                    b.HasKey("ID");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerChecks");
                });

            modelBuilder.Entity("WorkerPluginAPI.Models.WorkerCheck", b =>
                {
                    b.HasOne("WorkerPluginAPI.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
