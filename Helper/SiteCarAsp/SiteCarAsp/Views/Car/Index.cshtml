@{
    ViewData["Title"] = "Cars";
}
@model SiteCarAsp.ViewModels.CarInformationViewModel

<div class="accordion" id="accordionExample">
    <div class="card">
        <div id="headingOne">
            <button class="w-100 btn filter-activate-btn" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                Filters
            </button>
        </div>

        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
            <div class="card-body">
                @foreach (var filter in Model.Filters)
                {
                    <div class="filter-body" filter-id="car-table" filter-url="@Url.Action("FilterCars", "Car")">
                        <div>@filter.Key</div>
                        <div class="flex-row filter-data" field="@filter.Key">
                            @foreach (var f in filter.Value)
                            {
                                <div class="btn filter">@f</div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="d-inline-flex w-100 p-3 flex-wrap car-table" id="car-table">
    @{await Html.RenderPartialAsync("~/Views/Components/CarTable.partial.cshtml", Model.Cars);}
</div>

@section Scripts {

    <script>
        activeFilters = [
            @foreach(var filter in Model.ActiveFilters ?? Enumerable.Empty<FilterViewModel>())
            {
                <text>{ "field":"@filter.Field","val":"@filter.Val" },</text>
            }
        ];
    </script>

}