@model PeopleAnalysis.ViewModels.UserDetailInformationViewModel
@inject PeopleAnalysis.Services.ColorService colorService
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card d-flex flex-column p-3 m-2 ">
    <h1 class="p-2">Информация о человеке</h1>
    <div class="d-flex flex-row" style="width: 100%;">
        <img class="card-img-top w-25 m-3" src="@Model.Photo">
        <div class="card-body">
            <h5 class="card-title">@Model.FullName</h5>
            <p class="card-text">Дата рождения: @(Model.Birthday?.ToString() ?? "Не указана")</p>
            <a class="card-text" target="_blank" rel="noopener noreferrer" href="@Model.PageUrl">Ссылка на страницу</a>
        </div>
    </div>

    @{await Html.RenderPartialAsync("Photos", Model);}
    @{await Html.RenderPartialAsync("Analitycs", Model);}

</div>


@section Scripts
{
    @if (Model.AnalitycsViewModel?.Result != null)
    {
        <script>
            $(function () {
                var barChart = new Chart($('#bar'), {
                    type: 'bar',
                    data: {
                        labels: [@Html.Raw(string.Join(",", Model.AnalitycsViewModel.Result.ResultObjects.Select(x => $@"""{x.AnalysObject.Name}""")))],
                        datasets: [{
                            data: [@(string.Join(",", Model.AnalitycsViewModel.Result.ResultObjects.Select(x => x.Count)))],
                            backgroundColor:[@Html.Raw(string.Join(",",colorService.ColorHexList(Model.AnalitycsViewModel.Result.ResultObjects?.Count ?? 0)))]
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
                var pieChart = new Chart($('#pie'), {
                    type: 'doughnut',
                    data: {
                        labels: [@Html.Raw(string.Join(",", Model.AnalitycsViewModel.Result.ResultObjects.Select(x => $@"""{x.AnalysObject.Name}""")))],
                        datasets: [{
                            data: [@(string.Join(",", Model.AnalitycsViewModel.Result.ResultObjects.Select(x => x.Count)))],
                            backgroundColor:[@Html.Raw(string.Join(",",colorService.ColorHexList(Model.AnalitycsViewModel.Result.ResultObjects?.Count ?? 0)))]
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            });
        </script>
    }
}
